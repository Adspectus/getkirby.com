Title: Layout Field
----
Intro: In addition to the blocks field we also have a new layout field for complex block layouts in multiple columns.
----
Text:

(screenshot: layout.png)

```yaml
fields:
  layout:
    type: layout
    layouts:
      - "1/1"
      - "1/2, 1/2"
      - "1/4, 1/4, 1/4, 1/4"
      - "1/3, 2/3"
      - "2/3, 1/3"
      - "1/3, 1/3, 1/3"
```

The layout field also accepts the `fieldsets` option from the blocks field to control blocks in columns.

## How to render layouts in your templates

There's a new `toLayouts` field method, which you can use to get a structured collection of layout objects to create your HTML.

```php
<?php foreach ($page->layout()->toLayouts() as $layout): ?>
<section class="grid" id="<?= $layout->id() ?>">
  <?php foreach ($layout->columns() as $column): ?>
  <div class="column" style="--span:<?= $column->span() ?>">
    <div class="blocks">
      <?= $column->blocks() ?>
    </div>
  </div>
  <?php endforeach ?>
</section>
<?php endforeach ?>
```

## Calculate the column span value

Each column in a layout as a `$column->width()` method which will return the width defined in the blueprint. (i.e. `1/2`) but for many grid systems you need to know how many columns the current column should span in the grid. This can be done with the `$column->span()` method. The method calculates with a 12-column grid by default. So for example, if your column width is `1/2` the span method would return a value of 6. If you are working with a different kind of grid system you can pass the number of columns like this: `$column->span(6)`:

```php
<?php foreach ($page->layout()->toLayouts() as $layout): ?>
<section class="6-column-grid" id="<?= $layout->id() ?>">
  <?php foreach ($layout->columns() as $column): ?>
  <div class="column" style="--span:<?= $column->span(6) ?>">
    <div class="blocks">
      <?= $column->blocks() ?>
    </div>
  </div>
  <?php endforeach ?>
</section>
<?php endforeach ?>
```


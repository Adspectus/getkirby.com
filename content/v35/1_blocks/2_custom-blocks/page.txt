Title: Custom blocks

----

Intro: You can create your own Block types for the Blocks field in the same way you might already know from the famous Builder plugin. In fact, the Blocks field is our effort to embed the functionality of the Builder into the core of Kirby.

----

Text:


Custom blocks can be defined directly in the fieldsets list:

```yaml
fields:
  blocks:
    type: blocks
    fieldsets:
      - heading
      - text
      button:
        name: Button
        icon: bolt
        fields:
          link:
            type: url
          text:
            type: text
```

In the example above, we mix the unchanged default block types (heading and text) with our own custom block type to add a call to action button

## Preview

Custom block types don't have a visual preview by default. They show up with the icon and the name from your blueprint definition.

(screenshot: preview.png)

## Editing

To edit a custom block type, the editor can either double-tap on the block or click on the edit icon in the toolbar. The block drawer opens with the fields you've defined.

(screenshot: editing.png)

## Tabs

Like in the builder field, you can also define tabs for your blocks when they need a lot of settings

```yaml
fields:
  blocks:
    label: Text
    type: blocks
    fieldsets:
      - heading
      - text
      button:
        name: Button
        icon: bolt
        tabs:
          content:
            fields:
              link:
                type: url
              text:
                type: text
          styles:
            fields:
              class:
                type: text
              id:
                type: text
```

The tabs will then show up in the block drawer

(screenshot: tabs.png)

## Global block types

A more reusable way to store such a custom block type definition is in a folder called `site/blueprints/blocks`. In this case we would store it in `/site/blueprints/blocks/button.yml`:

```yaml
# /site/blueprints/blocks/button.yml
name: Button
icon: bolt
tabs:
  content:
    fields:
      link:
        type: url
      text:
        type: text
  styles:
    fields:
      class:
        type: text
      id:
        type: text
```

Now, we can use it in our fieldsets option for any blocks field.

```yaml
fields:
  blocks:
    type: blocks
    fieldsets:
      - heading
      - text
      - button
```

Of course, this also works in groups:

```yaml
fields:
  text:
    type: blocks
    fieldsets:
      text:
        label: Text
        type: group
        fieldsets:
          - heading
          - text
          - list
          - button
      media:
        label: Media
        type: group
        fieldsets:
          - image
          - video
      code:
        label: Code
        type: group
        fieldsets:
          - code
          - markdown
```

## Custom Block Type Snippet

To render the HTML for your custom block type, it needs a snippet in `site/snippets/blocks`. In this case we would create a file called `site/snippets/blocks/button.php`

```php
<a href="<?= $block->link() ?>" class="btn">
  <?= $block->text() ?>
</a>
```

## Visual block preview in the Panel

The default preview for custom blocks is nice, but it can be even better! You can create your own little Vue component to render a button preview directly in the blocks editor.

You can find an example plugin for such a button preview here: https://github.com/getkirby/blocks/tree/main/examples/cta
